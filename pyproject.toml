[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aioworkers-prometheus"
dynamic = ["version"]
description = "aioworkers prometheus integration"
readme = "README.rst"
license = "Apache-2.0"
requires-python = ">=3.9"
authors = [
    { name = "Alexander Malev", email = "malev@somedev.ru" },
]
keywords = [
    "aioworkers",
    "prometheus",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "aioworkers>=0.28",
    "prometheus-client>=0.14",
]
[project.optional-dependencies]
dev-test = [
    "aioworkers==0.28.0",
    "prometheus-client==0.22.0",
    "coverage[toml]==7.8.0",
    "pytest==8.3.5",
    "pytest-aioworkers[asyncio]==0.5.0",
    "pytest-mock==3.14.0",
    "pyyaml==6.0.2",
]
dev-lint = [
    "ruff==0.11.8",
    "mypy==1.15.0",
]

[project.entry-points.aioworkers]
prometheus = "aioworkers_prometheus"

[project.urls]
Homepage = "https://github.com/aioworkers/aioworkers-prometheus"
Documentation = "https://github.com/aioworkers/aioworkers-prometheus#readme"
Issues = "https://github.com/aioworkers/aioworkers-prometheus/issues"
Source = "https://github.com/aioworkers/aioworkers-prometheus"

[tool.hatch.version]
path = "aioworkers_prometheus/__init__.py"

[tool.hatch.build]
include = [
    "/aioworkers_prometheus",
]

[tool.hatch.envs.default]
features = [
    "dev-test",
]
[tool.hatch.envs.default.scripts]
cov = [
    "coverage run -m pytest",
    "coverage report",
]

[[tool.hatch.envs.all.matrix]]
python = [
    "3.9",
    "3.10",
    "3.11",
    "3.12",
    "3.13",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "aioworkers_prometheus",
    "tests",
]
addopts = [
    "--doctest-modules",
]

[tool.coverage.run]
branch = false
parallel = false
source = [
    "aioworkers_prometheus",
    "tests",
]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
extend-select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  # "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  # "SIM",
  # isort
  "I",
]
extend-ignore = [
    "E501",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "pytest",
]
ignore_missing_imports = true

[tool.hatch.envs.lint]
python = "3.9"
features = [
    "dev-lint",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:aioworkers_prometheus tests}"
style = [
    "ruff check {args:aioworkers_prometheus tests}",
    "ruff format --check --diff {args:aioworkers_prometheus tests}",
]
fmt = [
    "ruff check --fix {args:aioworkers_prometheus tests}",
    "ruff format {args:aioworkers_prometheus tests}",
    "style",
]
all = [
    "style",
    "typing",
]

[tool.hatch.envs.template]
detached = true
dependencies = [
    "scaraplate",
]
[tool.hatch.envs.template.scripts]
update = [
    "scaraplate rollup --no-input {args:../cookiecutter-aioworkers-plugin} ."
]
clone = [
    "git clone https://github.com/aioworkers/cookiecutter-aioworkers-plugin {args:../cookiecutter-aioworkers-plugin}"
]
